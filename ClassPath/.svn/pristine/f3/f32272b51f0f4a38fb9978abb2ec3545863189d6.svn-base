package kr.or.ddit.pfcp.professor.thesis.controller;

import java.io.IOException;
import java.security.Principal;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.MultiValueMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.pfcp.common.service.AtchFileService;
import kr.or.ddit.pfcp.common.service.FileRefService;
import kr.or.ddit.pfcp.common.vo.AtchFileVO;
import kr.or.ddit.pfcp.common.vo.FileRefVO;
import kr.or.ddit.pfcp.common.vo.ThesisVO;
import kr.or.ddit.pfcp.professor.thesis.service.ProfessorThesisService;
import kr.or.ddit.validate.utils.ErrorsUtils;
import lombok.extern.slf4j.Slf4j;


/**
 * @author 김태수
 * @since 2025. 7. 9.
 *
 * << 개정이력(Modification Information) >>
 * 	수정일		|	수정자	|	수정 내용
 * -----------------------------------------------
 * 2025. 7. 9.	|	김태수	|	최초 생성
 */
@Controller
@RequestMapping("/professor/thesis")
@Slf4j
public class ProfessorThesisController {
	
	@Autowired
	private ProfessorThesisService professorThesisService;
	
	@Autowired
	private FileRefService fileRefService;
	
	@Autowired
	private AtchFileService atchFileService;
	
	@Autowired
	private ErrorsUtils errosUtils;
	
	private static final String MODELNAME = "thesis";
	
	@ModelAttribute(MODELNAME)
	public ThesisVO thesis() {
		return new ThesisVO();
	}
	
	/**
	 * 논문 조회
	 * @return
	 */
	@GetMapping("thesisList.do")
	public String thesisList(
			Principal principal
			,Model model 
	) {
		
		if (principal != null) {
			String userNo = principal.getName(); 
			model.addAttribute("userNo", userNo); 
		}
		
		int totalCount = professorThesisService.readTotalThesisCnt();
		model.addAttribute("count", totalCount);
		
		List<ThesisVO> thesisList = professorThesisService.readThesisList();
		model.addAttribute(MODELNAME,thesisList);
		return "pfcp/professor/thesis/thesisList";
	}
	
	/**
	 * 논문 상세 조회
	 * @return
	 */
	@GetMapping("thesisDetail.do")
	public String thesisDetail() {
		return "pfcp/professor/thesis/thesisDetail";
	}
	
	/**
	 * 논문 등록
	 * @return
	 */
	@GetMapping("thesisInsert.do")
	public String thesisInsert(
			Principal principal
			, Model model
	) {
		
		if (principal != null) {
	        String userNo = principal.getName(); 
	        model.addAttribute("userNo", userNo);
	    }
		return "pfcp/professor/thesis/thesisForm";
	}
	
	
	@PostMapping("thesisInsertProcess.do")
	public String thesisInsertProcess(
			@ModelAttribute(MODELNAME) ThesisVO thesis
			,Principal principal
			,BindingResult errors
			,RedirectAttributes redirectAttributes
	) throws IOException {
		
		String lvn;
		if(!errors.hasErrors()) {
			String prNo = principal.getName();
			thesis.setUserNo(prNo);
			log.info("prNo : {}", prNo);
			
			
			MultipartFile file = thesis.getUploadFile();
			
			if (file != null && !file.isEmpty()) {
	            String atchId = "ATCH" + System.currentTimeMillis();
	            String fileRefNo = "FR" + System.currentTimeMillis();
	            
	            byte[] fileBytes = file.getBytes();

	            AtchFileVO atchFile = new AtchFileVO();
	            atchFile.setAtchId(atchId);
	            atchFile.setAtchMime(file.getContentType());
	            atchFile.setAtchOriginName(file.getOriginalFilename());
	            atchFile.setAtchSaveName(atchId + "_" + file.getOriginalFilename());
	            atchFile.setAtchSize(file.getSize());
	            atchFile.setAtchDate(LocalDate.now().format(DateTimeFormatter.BASIC_ISO_DATE));
	            atchFile.setAtchContent(fileBytes);
	            
	            atchFileService.createAtchFile(atchFile);
	            
	            FileRefVO fileRef = new FileRefVO();
	            fileRef.setFileRefNo(fileRefNo);
	            fileRef.setFileRefType("SCHOLARSHIP_APPLY");
	            fileRef.setFileRefTargetId(thesis.getThesisNo());
	            fileRef.setAtchId(atchId);
	            
	            fileRefService.createFileRef(fileRef);
	            
	            thesis.setFileRefNo(fileRefNo);
			}
			
			professorThesisService.createThesis(thesis);
			
			lvn = "redirect:/professor/thesis/thesisList.do";
			
		} else {
			redirectAttributes.addFlashAttribute(MODELNAME,thesis);
			MultiValueMap<String, String> customError = errosUtils.errorsToMap(errors);
			redirectAttributes.addFlashAttribute("errors", customError);
			lvn = "redirect:/professor/thesis/thesisInsert.do";
		}
		
		return lvn;
		
	}
	
	
	
	/**
	 * 논문 수정
	 * @return
	 */
	@GetMapping("thesisUpdate.do")
	public String thesisUpdate() {
		return "pfcp/professor/thesis/thesisUpdateForm";
	}
	
	/**
	 * 논문 삭제
	 * @return
	 */
	@GetMapping("thesisDelete.do")
	public String thesisDelete() {
		return "redirect:/professor/thesis/thesisList.do";
	}
	
	
	/**
	 * 학생 논문 조회
	 * @return
	 */
	@GetMapping("studentThesisList.do")
	public String studentThesisList() {
		return "pfcp/professor/thesis/studentThesisList";
	}
	
	/**
	 * 학생 논문 상세 조회
	 * @return
	 */
	@GetMapping("studentThesisDetail.do")
	public String studentThesisDetail() {
		return "pfcp/professor/thesis/studentThesisDetail";
	}
	
}
