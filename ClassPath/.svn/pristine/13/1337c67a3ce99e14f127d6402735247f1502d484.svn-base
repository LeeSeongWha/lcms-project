<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.pfcp.staff.grademanage.mapper.GrademanageMapper">

	<resultMap id="lectureStudentResultMap"
		type="kr.or.ddit.pfcp.common.vo.LectureEnrVO" autoMapping="true">
		<id property="enrollNo" column="ENROLL_NO" />

		<association property="user"
			javaType="kr.or.ddit.pfcp.common.vo.UserVO" autoMapping="true" />

		<association property="lecture"
			javaType="kr.or.ddit.pfcp.common.vo.LectureVO" autoMapping="true" />


		<association property="lectureReq"
			javaType="kr.or.ddit.pfcp.common.vo.LectureReqVO" autoMapping="true">
			<id property="reqNo" column="REQ_NO" />
		</association>

		<association property="subject"
			javaType="kr.or.ddit.pfcp.common.vo.SubjectVO" autoMapping="true">
			<id property="subjectCode" column="SUBJECT_CODE" />
		</association>

		<association property="department"
			javaType="kr.or.ddit.pfcp.common.vo.DepartmentVO" autoMapping="true">
			<id property="departmentNo" column="DEPARTMENT_NO" />
		</association>

		<association property="student"
			javaType="kr.or.ddit.pfcp.common.vo.StudentVO" autoMapping="true">
			<id property="userNo" column="USER_NO" />
		</association>
		
		<association property="gradeVO"
			javaType="kr.or.ddit.pfcp.common.vo.GradeVO" autoMapping="true">
			<id property="gradeNo" column="GRADE_NO" />
		</association>
		
		
	</resultMap>
	
	<resultMap id="grdMap" type="kr.or.ddit.pfcp.common.vo.GradeVO">
        <id property="gradeNo" column="GRADE_NO"/>
        <result property="lecNo" column="LEC_NO"/>
        <result property="userNo" column="USER_NO"/>
        <result property="finalGrade" column="FINAL_GRADE"/>
        <result property="gradeDate" column="GRADE_DATE"/>
        <result property="midtermScore" column="MIDTERM_SCORE"/>
        <result property="finalScore" column="FINAL_SCORE"/>
        <result property="assignmentScore" column="ASSIGNMENT_SCORE"/>
        <result property="attendanceScore" column="ATTENDANCE_SCORE"/>
        <result property="submitScore" column="SUBMIT_SCORE"/>
        <result property="finalGradeAlpha" column="FINAL_GRADE_ALPHA"/> <result property="enrollNo" column="ENROLL_NO"/>
        <result property="userName" column="USER_NAME"/>
        <result property="departmentName" column="DEPARTMENT_NAME"/>
        <result property="subjectName" column="SUBJECT_NAME"/>
        
        <association property="user"
			javaType="kr.or.ddit.pfcp.common.vo.UserVO" autoMapping="true" />

		<association property="lecture"
			javaType="kr.or.ddit.pfcp.common.vo.LectureVO" autoMapping="true" />


		<association property="lectureReq"
			javaType="kr.or.ddit.pfcp.common.vo.LectureReqVO" autoMapping="true">
			<id property="reqNo" column="REQ_NO" />
		</association>

		<association property="department"
			javaType="kr.or.ddit.pfcp.common.vo.DepartmentVO" autoMapping="true">
			<id property="departmentNo" column="DEPARTMENT_NO" />
		</association>

		<association property="student"
			javaType="kr.or.ddit.pfcp.common.vo.StudentVO" autoMapping="true">
			<id property="userNo" column="USER_NO" />
		</association>
		
		<association property="attendanceVO"
			javaType="AttendanceVO" autoMapping="true">
			<id property="attendId" column="ATTEND_ID" />
		</association>
		
		<association property="lectureEnr"
			javaType="LectureEnrVO" autoMapping="true">
			<id property="enrollNo" column="ENROLL_NO" />
		</association>
    </resultMap>
    
    <select id="selectStuGrade" parameterType="map" resultMap="grdMap">
		SELECT
		    LE.ENROLL_NO,
		    U.USER_NO,
		    U.USER_NAME,
		    D.DEPARTMENT_NAME,
		    G.GRADE_NO,
		    G.MIDTERM_SCORE,
		    G.FINAL_SCORE,
		    CALC_SCORES.ASSIGNMENT_SCORE,
		    CALC_SCORES.ATTENDANCE_SCORE,
		    CALC_SCORES.CALCULATED_FINAL_GRADE AS FINAL_GRADE,
		    CASE
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 95 THEN 'A+'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 90 THEN 'A0'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 85 THEN 'B+'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 80 THEN 'B0'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 75 THEN 'C+'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 70 THEN 'C0'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 65 THEN 'D+'
		        WHEN CALC_SCORES.CALCULATED_FINAL_GRADE >= 60 THEN 'D0'
		        ELSE 'F'
		    END AS FINAL_GRADE_ALPHA,
		    G.GRADE_DATE,
		    L.LEC_NO,
		    S.SUBJECT_NAME
		FROM LECTURE_ENR LE
		JOIN TB_USER U ON LE.USER_NO = U.USER_NO
		JOIN STUDENT ST ON U.USER_NO = ST.USER_NO
		JOIN DEPARTMENT D ON ST.DEPARTMENT_NO = D.DEPARTMENT_NO
		LEFT JOIN GRADE G ON LE.LEC_NO = G.LEC_NO AND LE.USER_NO = G.USER_NO
		JOIN LECTURE L ON LE.LEC_NO = L.LEC_NO
		JOIN LECTURE_REQ LR ON L.REQ_NO = LR.REQ_NO
		JOIN SUBJECT S ON LR.SUBJECT_CODE = S.SUBJECT_CODE
		JOIN (
		    SELECT
		        LE_INNER.LEC_NO,
		        LE_INNER.USER_NO,
		        (
		            SELECT NVL(SUM(SUB_AS.SUBMIT_SCORE), 0)
		            FROM ASSIGN_SUBMISSION SUB_AS
		            JOIN ASSIGNMENT SUB_A ON SUB_AS.ASSIGN_NO = SUB_A.ASSIGN_NO
		            WHERE SUB_A.LEC_NO = LE_INNER.LEC_NO
		              AND SUB_AS.STUDENT_NO = LE_INNER.USER_NO
		        ) AS ASSIGNMENT_SCORE,
		        (
		            SELECT
		                ROUND(
		                    (( (SUB_S.CREDIT * 15) - (COUNT(CASE SUB_A_ATTEND.ATTEND_STATUS WHEN '지각' THEN 1 END) + SUB_S.CREDIT * COUNT(CASE SUB_A_ATTEND.ATTEND_STATUS WHEN '결석' THEN 1 END)) ) / (SUB_S.CREDIT * 15.0)) * 100
		                    , 0)
		            FROM ATTENDANCE SUB_A_ATTEND
		            JOIN LECTURE_ENR SUB_LE ON SUB_A_ATTEND.ENROLL_NO = SUB_LE.ENROLL_NO
		            JOIN LECTURE SUB_L ON SUB_LE.LEC_NO = SUB_L.LEC_NO
		            JOIN LECTURE_REQ SUB_LR ON SUB_L.REQ_NO = SUB_LR.REQ_NO 
		            JOIN SUBJECT SUB_S ON SUB_LR.SUBJECT_CODE = SUB_S.SUBJECT_CODE
		            WHERE SUB_LE.LEC_NO = LE_INNER.LEC_NO
		              AND SUB_LE.USER_NO = LE_INNER.USER_NO
		            GROUP BY SUB_S.CREDIT
		        ) AS ATTENDANCE_SCORE,
		        ROUND(
		            (NVL(G_INNER.MIDTERM_SCORE, 0) * 0.35) +
		            (NVL(G_INNER.FINAL_SCORE, 0) * 0.35) +
		            (
		                SELECT NVL(SUM(SUB_AS_TOTAL.SUBMIT_SCORE), 0)
		                FROM ASSIGN_SUBMISSION SUB_AS_TOTAL
		                JOIN ASSIGNMENT SUB_A_TOTAL ON SUB_AS_TOTAL.ASSIGN_NO = SUB_A_TOTAL.ASSIGN_NO
		                WHERE SUB_A_TOTAL.LEC_NO = LE_INNER.LEC_NO
		                  AND SUB_AS_TOTAL.STUDENT_NO = LE_INNER.USER_NO
		            ) * 0.20 +
		            (
		                SELECT
		                    ROUND(
		                        (( (SUB_S_TOTAL.CREDIT * 15) - (COUNT(CASE SUB_A_ATTEND_TOTAL.ATTEND_STATUS WHEN '지각' THEN 1 END) + SUB_S_TOTAL.CREDIT * COUNT(CASE SUB_A_ATTEND_TOTAL.ATTEND_STATUS WHEN '결석' THEN 1 END)) ) / (SUB_S_TOTAL.CREDIT * 15.0)) * 100
		                        , 0)
		                FROM ATTENDANCE SUB_A_ATTEND_TOTAL
		                JOIN LECTURE_ENR SUB_LE_TOTAL ON SUB_A_ATTEND_TOTAL.ENROLL_NO = SUB_LE_TOTAL.ENROLL_NO
		                JOIN LECTURE SUB_L_TOTAL ON SUB_LE_TOTAL.LEC_NO = SUB_L_TOTAL.LEC_NO
		                JOIN LECTURE_REQ SUB_LR_TOTAL ON SUB_L_TOTAL.REQ_NO = SUB_LR_TOTAL.REQ_NO
		                JOIN SUBJECT SUB_S_TOTAL ON SUB_LR_TOTAL.SUBJECT_CODE = SUB_S_TOTAL.SUBJECT_CODE
		                WHERE SUB_LE_TOTAL.LEC_NO = LE_INNER.LEC_NO
		                  AND SUB_LE_TOTAL.USER_NO = LE_INNER.USER_NO
		                GROUP BY SUB_S_TOTAL.CREDIT
		            ) * 0.10
		        , 0) AS CALCULATED_FINAL_GRADE
		    FROM LECTURE_ENR LE_INNER
		    LEFT JOIN GRADE G_INNER ON LE_INNER.LEC_NO = G_INNER.LEC_NO AND LE_INNER.USER_NO = G_INNER.USER_NO
		    WHERE LE_INNER.LEC_NO = #{lecNo} 
		) CALC_SCORES ON LE.LEC_NO = CALC_SCORES.LEC_NO AND LE.USER_NO = CALC_SCORES.USER_NO
		WHERE LE.LEC_NO = #{lecNo}
    </select>

	<select id="selectLectureStudent" resultMap="lectureStudentResultMap">
		SELECT
		    LE.LEC_NO,
		    LE.ENROLL_NO,
		    LE.USER_NO,
		    LE.ENROLL_STATUS,
		    LE.ENROLL_TYPE,
		    LE.GRADE,
		    U.USER_NAME,
		    S.DEPARTMENT_NO,
		    D.DEPARTMENT_NAME,
		    LR.LEC_NAME,
		    
		    -- GRADE 테이블 컬럼
		    G.MIDTERM_SCORE,
		    G.FINAL_SCORE,
		    G.ASSIGNMENT_SCORE,
		    G.ATTENDANCE_SCORE,
		    G.FINAL_GRADE
		FROM
		    LECTURE_ENR LE
		JOIN TB_USER U ON LE.USER_NO = U.USER_NO
		JOIN STUDENT S ON S.USER_NO = U.USER_NO
		JOIN DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
		JOIN LECTURE L ON LE.LEC_NO = L.LEC_NO
		JOIN LECTURE_REQ LR ON LR.REQ_NO = L.REQ_NO
		LEFT JOIN GRADE G ON G.LEC_NO = LE.LEC_NO AND G.USER_NO = LE.USER_NO
		WHERE LE.LEC_NO = #{what}
		      AND ENROLL_STATUS = '수강중'
		OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<select id="selectAttendanceScore">
		  SELECT 
		    ROUND(
		      (
		        (
		          (s.CREDIT * 15) 
		          - 
		          (
		            COUNT(CASE a.ATTEND_STATUS WHEN '지각' THEN 1 END) 
		            + s.CREDIT * COUNT(CASE a.ATTEND_STATUS WHEN '결석' THEN 1 END)
		          )
		        ) 
		        / (s.CREDIT * 15.0)
		      ) * 100
		    , 0) AS attendanceScore
		  FROM ATTENDANCE a
		  JOIN LECTURE_ENR le ON a.ENROLL_NO = le.ENROLL_NO
		  JOIN LECTURE l ON le.LEC_NO = l.LEC_NO
		  JOIN LECTURE_REQ lr ON l.REQ_NO = lr.REQ_NO
		  JOIN SUBJECT s ON lr.SUBJECT_CODE = s.SUBJECT_CODE
		  WHERE le.LEC_NO = #{lecNo}
		    AND le.USER_NO = 'ST20220810'
		  GROUP BY s.CREDIT
	</select>


	<update id="updateGradeIfChanged" parameterType="map">
	    UPDATE GRADE
	    SET MIDTERM_SCORE = #{midtermScore},
	    	FINAL_SCORE = #{finalScore},
	    	ASSIGNMENT_SCORE = #{assignmentScore}
	    WHERE (USER_NO = #{userNo} AND LEC_NO = #{lecNo}) 
	    	  AND ( (NVL(MIDTERM_SCORE, -1) != NVL(#{midtermScore}, -1)) 
	    	  	   OR (NVL(FINAL_SCORE, -1) != NVL(#{finalScore}, -1)) 
	    	  	   OR (NVL(ASSIGNMENT_SCORE, -1) != NVL(#{assignmentScore}, -1)))
	</update>
	
	
	
<!-- 	<select id="selectGradeList" parameterType="String"> -->
<!-- 		SELECT -->
<!-- 		    GRADE_NO, -->
<!-- 		    LEC_NO, -->
<!-- 		    USER_NO, -->
<!-- 		    FINAL_GRADE, -->
<!-- 		    GRADE_DATE, -->
<!-- 		    MIDTERM_SCORE, -->
<!-- 		    FINAL_SCORE, -->
<!-- 		    ASSIGNMENT_SCORE, -->
<!-- 		    ATTENDANCE_SCORE -->
<!-- 		FROM -->
<!-- 		    GRADE -->
<!-- 		ORDER BY GRADE_NO -->
<!-- 		WHERE LEC_NO = #{lecNo}  -->
<!-- 		  AND USER_NO = #{userNo} -->
<!-- 	</select> -->
	

</mapper>