package kr.or.ddit.pfcp.student.certificate.controller;

import java.security.Principal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.MultiValueMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.common.util.DateUtils;
import kr.or.ddit.common.util.PdfCertGenerator;
import kr.or.ddit.pfcp.common.vo.ProgramCertReqVO;
import kr.or.ddit.pfcp.common.vo.ProgramEnrollVO;
import kr.or.ddit.pfcp.common.vo.ProgramVO;
import kr.or.ddit.pfcp.student.certificate.service.StudentCertificateService;
import kr.or.ddit.validate.utils.ErrorsUtils;

/**
 * 목록 조회 없음. 상세 조회만 있음.
 * 
 * @author seokyungdeok
 * @since 250630
 * 
 * << 개정이력(Modification Information) >>
 * 수정일	|	수정자	|	수정 내용
 * -----------------------------------------------
 * 250630	|	서경덕	|	최초 생성
 */
@Controller
@RequestMapping("/student/certificate")
public class StudentCertificateController {
	@Autowired
	private StudentCertificateService studentCertificateService;
	
	static final String MODEL_NAME = "programCertReq";
	
	@Autowired
	private ErrorsUtils errorsUtils;
	
	@ModelAttribute(MODEL_NAME)
	public ProgramCertReqVO programCertReq() {
		return new ProgramCertReqVO();
	}
	
	@GetMapping("programList.do")
	public String programList(
		Principal principal,
		Model model
	) {
		String userNo = principal.getName();
		
		List<ProgramVO> programList = studentCertificateService.readProgramList(userNo);	// 학생이 신청한 프로그램 목록
		
		model.addAttribute("programList", programList);
		
		return "pfcp/student/certificate/programList";
	}
	
	@GetMapping("suryoCertificate.do")
	public String suryoCertificate(
		@ModelAttribute(MODEL_NAME) ProgramCertReqVO programCertReq,
		Principal principal,
		@RequestParam String no,
		BindingResult errors,
		RedirectAttributes redirectAttributes
	) {
		String lvn;
		String userNo = principal.getName();
		
		if (!errors.hasErrors()) {
			Map<String, Object> paramMap = new HashMap<>();
			
			paramMap.put("programNo", no);
			paramMap.put("userNo", userNo);
			
			String enrollNo = studentCertificateService.readProgramTitle(paramMap).getEnrollNO();
			
			programCertReq.setEnrollNo(enrollNo);
			programCertReq.setUserNo(userNo);
			
			studentCertificateService.createProgramCertReq(programCertReq);
			
			redirectAttributes.addFlashAttribute("successMessage", "수료증 신청이 완료되었습니다.");
			
			lvn = "redirect:/student/certificate/programList.do";
		} else {
			redirectAttributes.addFlashAttribute(MODEL_NAME, programCertReq);
			
			MultiValueMap<String, String> customErrors = errorsUtils.errorsToMap(errors);
			redirectAttributes.addFlashAttribute("errors", customErrors);
			lvn = "redirect:/student/certificate/programList.do";
		}
		
		return lvn;
	}
	
	/**
	 * 재학 증명서 조회
	 * 
	 * @return
	 */
	@GetMapping("enrollmentCertificate.do")
	public String enrollmentCertificate() {
		return "pfcp/student/certificate/enrollmentCertificate";
	}
	
	/**
	 * 졸업 증명서 조회
	 * 
	 * @return
	 */
	@GetMapping("graduationCertificate.do")
	public String graduationCertificate() {
		return "pfcp/student/certificate/graduationCertificate";
	}
	
	/**
	 * 성적 증명서 조회
	 * 
	 * @return
	 */
	@GetMapping("transcriptCertificate.do")
	public String transcriptCertificate() {
		return "pfcp/student/certificate/transcriptCertificate";
	}
	
	/**
	 * 증명서 발급 내역 조회
	 * 
	 * @return
	 */
	@GetMapping("issuedCertificateHistory.do")
	public String issuedCertificateHistory() {
		return "pfcp/student/certificate/issuedCertificateHistory";
	}
}
