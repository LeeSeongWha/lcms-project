<%@ page contentType="text/html;charset=UTF-8" language="java"%>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<!DOCTYPE html>
<html>
<head>
<title>일정 관리</title>

<link rel="stylesheet" href="/dist/assets/css/bodyFormat.css">
<link
	href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.5/main.min.css"
	rel="stylesheet" />
<script
	src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.5/main.min.js"></script>
<script
	src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.5/locales-all.min.js"></script>

<style>
#calendar {
	max-width: 900px;
	margin: 50px auto;
}

.error {
	color: red;
	font-size: 0.9em;
}
</style>
</head>
<body>
	<h2 style="text-align: center;">교직원 일정 관리</h2>
	<div id="calendar"></div>

	<script>
    document.addEventListener('DOMContentLoaded', function () {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        locale: 'ko',
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth'
        },
        events: '/staff/schedule/list',
        

        eventClick: function (info) {
          const data = info.event.extendedProps;
          let details = "";
          details += "📌 제목: " + info.event.title + "\n";
          details += "📅 시작일: " + data.startDate + "\n";
          details += "📅 종료일: " + data.endDate + "\n";
          details += "📝 설명: " + (data.scheduleDesp || '없음') + "\n";
          alert(details);
        },

        eventDidMount: function(info) {
          // 🟢 일정 마지막 조각에만 버튼 표시
          if (!info.isEnd) return;

          const scheduleNo = info.event.id; 

          const titleEl = info.el.querySelector('.fc-event-title');
          if (!titleEl) return;

          // 버튼 영역 생성
          const btnWrap = document.createElement('span');
          btnWrap.style.marginLeft = 'auto';
          btnWrap.style.display = 'flex';
          btnWrap.style.gap = '4px';

          // ✏️ 수정 버튼
          const editBtn = document.createElement('span');
         
          editBtn.innerHTML = '✏️';
          editBtn.title = '수정';
          editBtn.style.cursor = 'pointer';
          editBtn.style.fontSize = '14px';
          editBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            console.log("pathvarible로 넘겨받을 no : =>>>", info.event.id);
            fetch(`/staff/schedule/\${scheduleNo}`)
              .then(res => res.json())
              .then(data => {
                document.querySelector("#scheduleNo").value = data.scheduleNo;
                document.querySelector("#scheduleTitle").value = data.scheduleTitle;
                document.querySelector("#startDate").value = data.startDate;
                document.querySelector("#endDate").value = data.endDate;
                document.querySelector("#scheduleType").value = data.scheduleType;
                document.querySelector("#scheduleDesp").value = data.scheduleDesp;
                document.querySelector("#refTypeSelect").value = data.refType;
                document.querySelector("#formMode").value = "update";
                document.querySelector("#submitBtn").textContent = "수정";
                document.querySelector("#resetBtn").style.display = "inline-block";
              });
          });

          // 🗑️ 삭제 버튼
          const deleteBtn = document.createElement('span');
          deleteBtn.innerHTML = '🗑️';
          deleteBtn.title = '삭제';
          deleteBtn.style.cursor = 'pointer';
          deleteBtn.style.fontSize = '14px';
          deleteBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            if (confirm("이 일정을 삭제하시겠습니까?")) {
              fetch(`/staff/schedule/\${scheduleNo}`, {
                method: 'DELETE'
              })
              .then(res => res.text())
              .then(result => {
                if (result === 'success') {
                  alert("삭제되었습니다.");
                  info.event.remove();
                } else {
                  alert("삭제에 실패했습니다.");
                }
              });
            }
          });

          // 버튼 삽입
          btnWrap.appendChild(editBtn);
          btnWrap.appendChild(deleteBtn);
          titleEl.style.display = 'flex';
          titleEl.style.alignItems = 'center';
          titleEl.appendChild(btnWrap);
        }
      });

      // 등록/수정 초기화
      document.querySelector("#resetBtn").addEventListener("click", function () {
        document.querySelector("#scheduleNo").value = "";
        document.querySelector("#scheduleTitle").value = "";
        document.querySelector("#startDate").value = "";
        document.querySelector("#endDate").value = "";
        document.querySelector("#scheduleType").value = "";
        document.querySelector("#scheduleDesp").value = "";
        document.querySelector("#refTypeSelect").selectedIndex = 0;
        document.querySelector("#formMode").value = "insert";
        document.querySelector("#submitBtn").textContent = "저장";
        document.querySelector("#resetBtn").style.display = "none";
      });

      calendar.render();
    });
  </script>

	<!-- 일정 등록/수정 폼 -->
	<h3 style="text-align: center;">📥 일정 등록 / 수정</h3>
	<button class="btn btn-secondary" type="button" id="resetBtn"
		style="display: none;">등록으로</button>

	<form:form modelAttribute="scheduleVO" action="/staff/schedule/save"
		method="post" style="width:900px; margin: 0 auto;">
		<form:hidden path="scheduleNo" id="scheduleNo" />
		<input type="hidden" name="formMode" id="formMode" value="insert" />
		<fieldset style="padding: 20px; border: 1px solid #ccc;">
			<table style="width: 100%; border-collapse: collapse;">
				<tr>
					<td><label for="scheduleTitle">일정 제목</label></td>
					<td><form:input path="scheduleTitle" id="scheduleTitle" /> <form:errors
							path="scheduleTitle" cssClass="error" /></td>
				</tr>
				<tr>
					<td><label for="startDate">시작일</label></td>
					<td><form:input path="startDate" id="startDate" type="date" />
						<form:errors path="startDate" cssClass="error" /></td>
				</tr>
				<tr>
					<td><label for="endDate">종료일</label></td>
					<td><form:input path="endDate" id="endDate" type="date" /> <form:errors
							path="endDate" cssClass="error" /></td>
				</tr>
				<tr>
					<td><label for="scheduleType">일정 유형</label></td>
					<td><form:input path="scheduleType" id="scheduleType" /> <form:errors
							path="scheduleType" cssClass="error" /></td>
				</tr>
				<tr>
					<td><label for="refTypeSelect">참조 유형</label></td>
					<td><form:select path="ref.refType" id="refTypeSelect"
							items="${refTypeList}" itemValue="refType" itemLabel="refType" />
						<form:errors path="ref.refType" cssClass="error" /></td>
				</tr>
				<tr>
					<td><label for="scheduleDesp">일정 설명</label></td>
					<td><form:textarea path="scheduleDesp" id="scheduleDesp"
							rows="3" cols="40" /> <form:errors path="scheduleDesp"
							cssClass="error" /></td>
				</tr>
			</table>
			<div style="text-align: right; margin-top: 15px;">
				<button class="btn btn-primary" type="submit" id="submitBtn">저장</button>
			</div>
		</fieldset>
	</form:form>

</body>
</html>
