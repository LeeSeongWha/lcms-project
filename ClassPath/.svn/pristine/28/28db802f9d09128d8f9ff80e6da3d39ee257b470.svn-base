package kr.or.ddit.pfcp.professor.exam.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

/**
*
* @author 김태수
* @since 2025.07.01
* @see
﻿ * << 개정이력(Modification Information) >>
* 수정일		  |		수정자	|	수정 내용
* -----------|-------------|--------------------------
* 2025.07.01 | 	김태수   	|   최초 작성
* 
*/
@Controller
@RequestMapping("/professor/exam")
public class ProfessorExamController {
	
	/**
	 * 시험 정보 조회 - 시험 유형 , 시험 제목 , 교과목
	 * @return
	 */
	@GetMapping("examList.do")
	public String examList() {
		return "pfcp/professor/exam/examList";
	}
	
	
	/**
	 * 시험 등록
	 * @return
	 */
	@GetMapping("examInsert.do")
	public String examInsert() {
		return "pfcp/professor/exam/examInsert";
	}
	
	/**
	 * 시험 수정
	 * @return
	 */
	@GetMapping("examUpdate.do")
	public String examUpdate() {
		return "pfcp/professor/exam/examUpdate";
	}
	
	/**
	 * 시험 상세 조회
	 * @return
	 */
	@GetMapping("examDetail.do")
	public String examDetail() {
		return "pfcp/professor/exam/examDetail";
	}
	
	/**
	 * 시험 삭제
	 * @return
	 */
	@GetMapping("examDelete.do")
	public String examDelete() {
		return "redirect:/professor/exam/examList.do";
	}
	
	
	
	///////////////////////
	
	/**
	 * 문제 관리 - 문제 조회
	 * @return
	 */
	@GetMapping("questionList.do")
	public String questionList() {
		return "pfcp/professor/exam/questionList";
	}
	
	/**
	 * 문제 등록
	 * @return
	 */
	@GetMapping("questionInsert.do")
	public String questionInsert() {
		return "pfcp/professor/exam/questionInsert";
	}
	
	/**
	 * 문제 수정
	 * @return
	 */
	@GetMapping("questionUpdate.do")
	public String questionUpdate() {
		return "pfcp/professor/exam/questionUpdate";
	}
	
	/**
	 * 문제 상세 조회
	 * @return
	 */
	@GetMapping("questionDetail.do")
	public String questionDetail() {
		return "pfcp/professor/exam/questionDetail";
	}
	
	/**
	 * 문제 삭제
	 * @return
	 */
	@GetMapping("questionDelete.do")
	public String questionDelete() {
		return "redirect:/professor/exam/questionList.do";
	}
	
	
}
