package kr.or.ddit.pfcp.student.lecture.grade.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.pfcp.common.vo.LectureEnrVO;
import kr.or.ddit.pfcp.common.vo.SemesterVO;
import kr.or.ddit.pfcp.student.lecture.grade.service.StudentGradeService;

/**
 * 학생 액터의 성적 관리
 * 
 * @author seokyungdeok
 * @since 250630
 * 
 * << 개정이력(Modification Information) >>
 * 수정일	|	수정자	|	수정 내용
 * -----------------------------------------------
 * 250630	|	서경덕	|	최초 생성
 */
@Controller
@RequestMapping("/student/grade")
public class StudentGradeController {
	@Autowired
	private StudentGradeService studentGradeService;
	
	@GetMapping("semesterList.do")
	@ResponseBody
	public List<SemesterVO> semesterList() {
		List<SemesterVO> semesterList = studentGradeService.readSemesterList();
		
		return semesterList;
	}
	
	/**
	 * 전체 학기 성적 조회
	 * 
	 * @return
	 */
	@GetMapping("history.do")
	public String gradeList(
		Principal principal,
		Model model
	) {
		List<LectureEnrVO> lectureEnrList = studentGradeService.readStudentGradeList(principal.getName());
		
		for (LectureEnrVO lectureEnr : lectureEnrList) {
			String grade = lectureEnr.getGrade();
			
			switch (grade) {
				case "A+":
					lectureEnr.setGradePoint(4.5);
					
					break;
				case "A0":
					lectureEnr.setGradePoint(4.0);
					
					break;
				case "B+":
					lectureEnr.setGradePoint(3.5);
					
					break;
				case "B0":
					lectureEnr.setGradePoint(3.0);
					
					break;
				case "C+":
					lectureEnr.setGradePoint(2.5);
					
					break;
				case "C0":
					lectureEnr.setGradePoint(2.0);
					
					break;
				case "D+":
					lectureEnr.setGradePoint(1.5);
					
					break;
				case "D0":
					lectureEnr.setGradePoint(1.0);
					
					break;
				
				case "F":
					lectureEnr.setGradePoint(0);
					
					break;
			}
		}
		
		model.addAttribute("semesterNo", lectureEnrList.get(0).getSemester().getSemesterNo());
		model.addAttribute("lectureEnrList", lectureEnrList);
		
		return "pfcp/student/grade/gradeHistory";
	}
	
	/**
	 * 현재 학기 성적 조회
	 * 
	 * @return
	 */
	@GetMapping("currSemester.do")
	public String gradeCurrentSemester() {
		return "pfcp/student/grade/gradeCurrSemester";
	}
	
	/**
	 * 성적 이의 신청 목록 조회 (List)
	 * 
	 * @return
	 */
	@GetMapping("appeal.do")
	public String gradeAppealList() {
		return "pfcp/student/grade/gradeAppeal";
	}
	
	/**
	 * 성적 이의 신청 상세 조회 (Detail)
	 * 
	 * @return
	 */
	@GetMapping("appealDetail.do")
	public String gradeAppealDetail() {
		return "pfcp/student/grade/gradeAppealDetail";
	}
	
	/**
	 * 성적 이의 신청 등록
	 * 
	 * @return
	 */
	@GetMapping("appealInsert.do")
	public String gradeAppealInsert() {
		return "pfcp/student/grade/gradeAppealInsert";
	}
	
	/**
	 * 성적 이의 신청 삭제
	 * 
	 * @return
	 */
	@GetMapping("appealDelete.do")
	public String gradeAppealDelete() {
		return "redirect:/student/grade/appeal.do";
	}
	
	/**
	 * 성적 이의 신청 수정
	 * 
	 * @return
	 */
	@GetMapping("appealUpdate.do")
	public String gradeAppleaUpdate() {
		return "pfcp/student/grade/gradeAppealUpdate";
	}
}
