<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.or.ddit.pfcp.staff.applyGraduation.mapper.ApplyGrdMapper">
	<resultMap id="graduationEligibilityMap"
		type="kr.or.ddit.pfcp.common.vo.GraduationRequirementVO">
		<result property="userNo" column="USER_NO" />
		<result property="userName" column="USER_NAME" />
		<result property="departmentNo" column="DEPARTMENT_NO" />

		<result property="totalCredit" column="TOTAL_CREDIT" />
		<result property="majorCredit" column="MAJOR_CREDIT" />
		<result property="generalCredit" column="GENERAL_CREDIT" />

		<result property="graduationEligible"
			column="GRADUATION_ELIGIBLE" />
	</resultMap>


	<!-- 1. 총 레코드 수 조회 -->
	<select id="selectGraduationCount" resultType="int">

		SELECT COUNT(*) 
		FROM (
		SELECT S.USER_NO
		FROM STUDENT S
		JOIN TB_USER TB ON
		S.USER_NO = TB.USER_NO
		JOIN DEPARTMENT D ON S.DEPARTMENT_NO =
		D.DEPARTMENT_NO
		JOIN DGR_REQ DR ON D.DGR_NO = DR.DGR_NO
		JOIN LECTURE_ENR
		LE ON S.USER_NO = LE.USER_NO
		JOIN LECTURE L ON LE.LEC_NO = L.LEC_NO
		JOIN LECTURE_REQ LR ON L.REQ_NO = LR.REQ_NO
		JOIN SUBJECT SUB ON
		LR.SUBJECT_CODE = SUB.SUBJECT_CODE
		WHERE S.STUDENT_GRADE = 4  AND S.STU_STATUS != '졸업' AND LE.GRADE IS NOT NULL

		<if test="keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'userNo'">
					AND S.USER_NO LIKE '%' || #{keyword} || '%'
				</when>
				<when test="searchType == 'userName'">
					AND TB.USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="searchType == 'departmentNo'">
					AND S.DEPARTMENT_NO LIKE '%' || #{keyword} || '%'
				</when>
				<otherwise>
					AND (
					S.USER_NO LIKE '%' || #{keyword} || '%'
					OR
					TB.USER_NAME LIKE '%' || #{keyword} || '%'
					OR S.DEPARTMENT_NO LIKE
					'%' || #{keyword} || '%'
					)
				</otherwise>
			</choose>
		</if>

		GROUP BY S.USER_NO, TB.USER_NAME, S.DEPARTMENT_NO, DR.DGR_MC,
		DR.DGR_LAC, DR.DGR_GRADE

		<if test="eligible != null and eligible != ''">
			HAVING (
			CASE
			WHEN
			SUM(CASE WHEN LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN
			SUB.CREDIT ELSE 0 END) >= DR.DGR_GRADE
			AND SUM(CASE WHEN
			LR.LEC_CATEGORY IN ('전필', '전선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL
			THEN SUB.CREDIT
			ELSE 0 END) >= DR.DGR_MC
			AND SUM(CASE WHEN LR.LEC_CATEGORY IN ('교필',
			'교선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL
			THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_LAC
			THEN 'Y'
			ELSE 'N'
			END
			) = #{eligible}
		</if>
		)

	</select>

	<!-- 2. 페이징 포함한 졸업요건 목록 조회 -->
	<select id="selectGraduationList"
		resultType="kr.or.ddit.pfcp.common.vo.GraduationRequirementVO">
		SELECT * FROM (
				SELECT ROWNUM AS RNUM, A.*
				FROM (
				SELECT
				S.USER_NO,
				TB.USER_NAME,
				S.DEPARTMENT_NO,
		
				-- 총 이수 학점
				SUM(CASE WHEN LE.GRADE != 'F' AND LE.GRADE IS NOT NULL
				THEN SUB.CREDIT ELSE 0 END) AS TOTAL_CREDIT,
		
				-- 전공 학점
				SUM(CASE WHEN
				LR.LEC_CATEGORY IN ('전필', '전선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN
				SUB.CREDIT
				ELSE 0 END) AS MAJOR_CREDIT,
		
				-- 교양 학점
				SUM(CASE WHEN LR.LEC_CATEGORY IN
				('교필', '교선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN
				SUB.CREDIT ELSE 0 END) AS
				GENERAL_CREDIT,
		
				-- 졸업 가능 여부
				CASE
				WHEN
				SUM(CASE WHEN LR.LEC_CATEGORY IN
				('전필', '전선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN
				SUB.CREDIT ELSE 0 END) >=
				DR.DGR_MC
				AND SUM(CASE WHEN LR.LEC_CATEGORY IN ('교필', '교선') AND
				LE.GRADE != 'F' AND LE.GRADE IS NOT NULL
				THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_LAC
				AND SUM(CASE
				WHEN LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN SUB.CREDIT ELSE 0 END) >=
				DR.DGR_GRADE
				THEN
				'Y'
				ELSE 'N'
				END AS GRADUATION_ELIGIBLE
		
				FROM STUDENT S
				JOIN TB_USER TB ON
				S.USER_NO =
				TB.USER_NO
				JOIN DEPARTMENT D ON S.DEPARTMENT_NO =
				D.DEPARTMENT_NO
				JOIN
				DGR_REQ DR ON D.DGR_NO = DR.DGR_NO
				JOIN LECTURE_ENR
				LE ON S.USER_NO =
				LE.USER_NO
				JOIN LECTURE L ON LE.LEC_NO = L.LEC_NO
				JOIN
				LECTURE_REQ LR ON
				L.REQ_NO = LR.REQ_NO
				JOIN SUBJECT SUB ON
				LR.SUBJECT_CODE =
				SUB.SUBJECT_CODE
		
				WHERE S.STUDENT_GRADE = 4  AND S.STU_STATUS != '졸업' AND LE.GRADE IS NOT NULL
		
				<if test="keyword != null and keyword != ''">
					<choose>
						<when test="searchType == 'userNo'">
							AND S.USER_NO LIKE '%' || #{keyword} || '%'
						</when>
						<when test="searchType == 'userName'">
							AND TB.USER_NAME LIKE '%' || #{keyword} || '%'
						</when>
						<when test="searchType == 'departmentNo'">
							AND S.DEPARTMENT_NO LIKE '%' || #{keyword} || '%'
						</when>
						<otherwise>
							AND (
							S.USER_NO LIKE '%' || #{keyword} || '%'
							OR
							TB.USER_NAME LIKE '%' || #{keyword} || '%'
							OR S.DEPARTMENT_NO LIKE
							'%' || #{keyword} || '%'
							)
						</otherwise>
					</choose>
				</if>
		
				GROUP BY S.USER_NO, TB.USER_NAME, S.DEPARTMENT_NO, DR.DGR_MC,
				DR.DGR_LAC, DR.DGR_GRADE
		
				<if test="eligible != null and eligible != ''">
					HAVING (
					CASE
					WHEN
					SUM(CASE WHEN LR.LEC_CATEGORY IN ('전필',
					'전선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN
					SUB.CREDIT ELSE 0 END) >= DR.DGR_MC
					AND
					SUM(CASE WHEN LR.LEC_CATEGORY IN ('교필', '교선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL
					THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_LAC
					AND SUM(CASE WHEN LE.GRADE
					!= 'F' AND LE.GRADE IS NOT NULL THEN SUB.CREDIT ELSE 0 END) >=
					DR.DGR_GRADE
					THEN 'Y'
					ELSE 'N'
					END
					) = #{eligible}
				</if>
		
				ORDER BY S.USER_NO
				) A
			<![CDATA[
			WHERE ROWNUM <= #{end}
			]]>
				)
		<![CDATA[
		WHERE RNUM >= #{start}
		]]>
	</select>



	<select id="selectGraduatableUserNos" resultType="string">
		SELECT S.USER_NO
		FROM STUDENT S
		JOIN TB_USER TB ON S.USER_NO = TB.USER_NO
		JOIN DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
		JOIN DGR_REQ DR ON D.DGR_NO = DR.DGR_NO
		JOIN LECTURE_ENR LE ON S.USER_NO = LE.USER_NO
		JOIN LECTURE L ON LE.LEC_NO = L.LEC_NO
		JOIN LECTURE_REQ LR ON L.REQ_NO = LR.REQ_NO
		JOIN SUBJECT SUB ON LR.SUBJECT_CODE = SUB.SUBJECT_CODE
		WHERE S.STUDENT_GRADE = 4 AND S.STU_STATUS != '졸업' AND LE.GRADE IS NOT NULL
	
		<if test="keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'userNo'">
					AND S.USER_NO LIKE '%' || #{keyword} || '%'
				</when>
				<when test="searchType == 'userName'">
					AND TB.USER_NAME LIKE '%' || #{keyword} || '%'
				</when>
				<when test="searchType == 'departmentNo'">
					AND S.DEPARTMENT_NO LIKE '%' || #{keyword} || '%'
				</when>
				<otherwise>
					AND (
						S.USER_NO LIKE '%' || #{keyword} || '%'
						OR TB.USER_NAME LIKE '%' || #{keyword} || '%'
						OR S.DEPARTMENT_NO LIKE '%' || #{keyword} || '%'
					)
				</otherwise>
			</choose>
		</if>
	
		GROUP BY S.USER_NO, TB.USER_NAME, S.DEPARTMENT_NO, DR.DGR_MC, DR.DGR_LAC, DR.DGR_GRADE
	
		<if test="eligible != null and eligible != ''">
			HAVING (
				CASE
					WHEN
						SUM(CASE WHEN LR.LEC_CATEGORY IN ('전필', '전선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_MC
						AND SUM(CASE WHEN LR.LEC_CATEGORY IN ('교필', '교선') AND LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_LAC
						AND SUM(CASE WHEN LE.GRADE != 'F' AND LE.GRADE IS NOT NULL THEN SUB.CREDIT ELSE 0 END) >= DR.DGR_GRADE
					THEN 'Y'
					ELSE 'N'
				END
			) = #{eligible}
		</if>
	</select>
	
	<update id="updateUserGradustatus">
		UPDATE STUDENT
		SET STU_STATUS = '졸업'
		WHERE USER_NO = #{userNo}
	</update>
	
	



</mapper>