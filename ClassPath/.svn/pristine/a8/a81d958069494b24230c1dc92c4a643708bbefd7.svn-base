<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c"%>

<title>시설 예약 가능 시간 설정</title>
<script src="https://cdn.tailwindcss.com"></script>



<div class="max-w-6xl mx-auto my-12 p-8 bg-white rounded-xl shadow-lg">
	<h2 class="text-3xl font-extrabold text-center text-gray-900 mb-8">교수
		상담</h2>

	<div class="text-center mb-8 p-4 bg-blue-50 rounded-lg">
		<h3 id="facilityName" class="text-xl font-bold text-blue-700 mb-1">
			<span class="font-normal text-gray-600">상담 시간표 조회를 원하는 교수를 선택하세요</span>
		</h3>

	</div>

	<c:if test="${mode == 'edit'}">
		<div class="mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
			<p class="text-yellow-800 font-medium text-center">📝 수정 모드:
				시간표의 셀을 클릭하여 예약 가능 시간을 설정하세요.</p>
		</div>
	</c:if>
</div>
<div class="counseling-container">
	<div class="professor-list">
		<h3>교수 목록</h3>

		<div class="department-dropdown">
			<select class="department-select" onchange="filterProfessors(this.value)">
				<option value="">학과를 선택하세요</option>
				<option value="DP001">컴퓨터공학과</option>
				<option value="DP002">전자공학과</option>
				<option value="DP003">시각디자인학과</option>
				<option value="DP004">소프트웨어학과</option>
				<option value="DP005">국어국문학과</option>
			</select>
		</div>

		<div class="professor-card-wrapper">
				<c:choose>
					<c:when test="${not empty professor }">
						<c:forEach items="${professor }" var="professor">
						<div class="professor-card" 
							data-department="${professor.departmentNo}" 
							data-prof-id="${professor.userNo }" 
							onclick="selectProfessor('${professor.userNo }')">
							
							<div class="professor-card-icon">👨‍🏫</div>
							<div class="professor-info">
								<h4>${professor.user.userName }</h4>
								<p>스마트융합대학/${professor.department.departmentName }</p>
							</div>
						</div>
						</c:forEach>
					</c:when>
					<c:otherwise>
						<tr>
							<td colspan="8">
								아직 교수 없음.
							</td>
						</tr>
					</c:otherwise>
				</c:choose> 
		</div>

<!-- 	</div> -->
<!-- 	<table class="schedule-table"> -->
<!-- 		<thead> -->
<!-- 			<tr> -->
<!-- 				<th>날짜</th> -->
<!-- 				<th>요일</th> -->
<!-- 				<th>상담시작</th> -->
<!-- 				<th>상담종료</th> -->
<!-- 				<th>소속</th> -->
<!-- 				<th>이름</th> -->
<!-- 				<th>상담방법</th> -->
<!-- 				<th>정원</th> -->
<!-- 				<th>잔여석</th> -->
<!-- 			</tr> -->
<!-- 		</thead> -->
<!-- 		<tbody id="scheduleTableBody"> -->
<!-- 			<tr class="time-slot available" onclick="bookCounseling(this)"> -->
<!-- 				<td>2025-06-27</td> -->
<!-- 				<td>금요일</td> -->
<!-- 				<td>07:00</td> -->
<!-- 				<td>18:00</td> -->
<!-- 				<td>스마트융합대학/컴퓨터공학과/컴퓨터공학과</td> -->
<!-- 				<td class="prof-name-in-table">송지영</td> -->
<!-- 				<td>온라인상담</td> -->
<!-- 				<td>30</td> -->
<!-- 				<td>30</td> -->
<!-- 			</tr> -->
<!-- 		</tbody> -->
<!-- 	</table> -->
<!-- </div> -->

<script>
  // 교수 정보 데이터 (가정된 데이터 - 실제로는 DB에서 가져옴)
//   const professors = {
//     prof1: { name: '송지영', dept: '스마트융합대학/컴퓨터공학과', major: '전공: 인공지능, 머신러닝' }
//   };

  let selectedProfessorId = null; // Currently selected professor ID

  // 페이지 로드 시 안내 메시지 표시
  window.onload = function() {
    document.querySelector('.no-professors').classList.add('show');
    // Hide modify button on initial load
    document.getElementById('modifyCounselingTimeBtn').style.display = 'none';
  };

  function filterProfessors(department) {
    const professorCards = document.querySelectorAll('.professor-card');
    const noProfessorsMsg = document.querySelector('.no-professors');
    const modifyBtn = document.getElementById('modifyCounselingTimeBtn');
    
    // 모든 교수 카드 숨기기
    professorCards.forEach(card => {
      card.classList.remove('show', 'selected');
    });
    
    // Reset selected professor and hide modify button
    selectedProfessorId = null;
    modifyBtn.style.display = 'none';

    if (department === '') {
      // 학과를 선택하지 않은 경우 안내 메시지 표시
      noProfessorsMsg.classList.add('show');
      document.getElementById('scheduleView').style.display = 'none';
    } else {
      // 선택된 학과의 교수만 표시
      noProfessorsMsg.classList.remove('show');
      const filteredCards = document.querySelectorAll(`[data-department=${departmentNo}`);
      filteredCards.forEach(card => {
        card.classList.add('show');
      });
      
      // 스케줄 뷰 숨기기 (새로운 학과 선택 시)
      document.getElementById('scheduleView').style.display = 'none';
    }
  }

  function showTab(id) {
    document.querySelectorAll('.tab-content').forEach(t => t.classList.remove('active'));
    document.querySelectorAll('.tab-menu button').forEach(b => b.classList.remove('active'));
    document.getElementById(id).classList.add('active');
    event.currentTarget.classList.add('active');

    // If switching to counseling tab, and no professor is selected, hide the modify button
    if (id === 'counseling') {
        const modifyBtn = document.getElementById('modifyCounselingTimeBtn');
        if (!selectedProfessorId) {
            modifyBtn.style.display = 'none';
        } else {
            modifyBtn.style.display = 'block'; // Show if a professor is already selected
        }
    }
  }

  function searchStudent() {
    const q = document.getElementById("search").value.toLowerCase();
    document.querySelectorAll("#studentTable tr").forEach(row => {
      row.style.display = row.innerText.toLowerCase().includes(q) ? "" : "none";
    });
  }

  function selectProfessor(profId) {
    // Set the currently selected professor ID
    selectedProfessorId = profId;

    // Show the modify counseling time button
    const modifyBtn = document.getElementById('modifyCounselingTimeBtn');
    modifyBtn.style.display = 'block';
    // Update the button's href to include the selected professor's ID
    modifyBtn.onclick = function() {
        location.href = `학생관리상담시간설정.html?profId=${selectedProfessorId}`;
    };


    // 모든 교수 카드에서 선택 상태 제거
    document.querySelectorAll('.professor-card').forEach(card => {
      card.classList.remove('selected');
    });
    
    // 클릭한 교수 카드에 선택 상태 추가
    event.currentTarget.classList.add('selected');
    
    // 교수 정보 업데이트
    const prof = professors[profId];
    document.getElementById('professorName').textContent = prof.name + ' 교수님 상담 시간표';
    document.getElementById('professorDept').textContent = prof.dept;
    
    // 시간표의 교수 이름 업데이트 (uses class for multiple elements)
    document.querySelectorAll('.prof-name-in-table').forEach(element => {
        element.textContent = prof.name;
    });
    
    // 스케줄 뷰 표시
    document.getElementById('scheduleView').style.display = 'block';
  }

  function bookCounseling(row) {
    if (row.classList.contains('available')) {
      if (confirm('이 시간대로 상담을 예약하시겠습니까?')) {
        row.classList.remove('available');
        row.classList.add('booked');
        // 잔여석 감소
        const remainingCell = row.cells[8];
        const remaining = parseInt(remainingCell.textContent) - 1;
        remainingCell.textContent = remaining;
        alert('상담이 예약되었습니다.');
      }
    } else if (row.classList.contains('booked')) {
      alert('이미 예약된 시간대입니다.');
    }
  }

  function changePage(direction) {
    // 페이지네이션 기능 (실제로는 서버 연동 필요)
    console.log('Page change:', direction);
  }
</script>

<style>

.professor-card {
  display: none;
}

.professor-card.show {
  display: block;
}


/* Custom CSS for Professor List */
.counseling-container {
	display: flex;
	gap: 2rem; /* Space between professor list and schedule table */
	max-width: 90rem; /* Increased max-width for better layout */
	margin: 2rem auto;
	padding: 1rem;
}

.professor-list {
	flex: 0 0 25%; /* Professor list takes 25% of the width */
	background-color: #f9fafb;
	border-radius: 0.75rem;
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
	padding: 1.5rem;
	height: fit-content; /* Adjust height to content */
	border: 1px solid #e5e7eb;
}

.professor-list h3 {
	font-size: 1.75rem; /* Larger heading */
	font-weight: 700;
	color: #1f2937;
	margin-bottom: 1.5rem;
	text-align: center;
	position: relative;
	padding-bottom: 0.75rem;
}

.professor-list h3::after {
	content: '';
	position: absolute;
	left: 50%;
	bottom: 0;
	transform: translateX(-50%);
	width: 3rem;
	height: 3px;
	background-color: #3b82f6; /* Blue underline */
	border-radius: 2px;
}

.department-dropdown {
	margin-bottom: 1.5rem;
}

.department-select {
	width: 100%;
	padding: 0.75rem 1rem;
	border: 1px solid #d1d5db;
	border-radius: 0.5rem;
	background-color: #ffffff;
	font-size: 1rem;
	color: #374151;
	appearance: none; /* Remove default arrow */
	-webkit-appearance: none;
	-moz-appearance: none;
	background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor'%3E%3Cpath fill-rule='evenodd' d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z' clip-rule='evenodd'%3E%3C/path%3E%3C/svg%3E");
	background-repeat: no-repeat;
	background-position: right 0.75rem center;
	background-size: 1em;
	cursor: pointer;
	transition: border-color 0.2s, box-shadow 0.2s;
}

.department-select:focus {
	outline: none;
	border-color: #3b82f6;
	box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
}

.professor-card-wrapper {
	display: flex;
	flex-direction: column;
	gap: 1rem; /* Space between professor cards */
}

.professor-card {
	background-color: #ffffff;
	border: 1px solid #e5e7eb;
	border-radius: 0.625rem;
	padding: 1.25rem;
	cursor: pointer;
	transition: transform 0.2s, box-shadow 0.2s, border-color 0.2s;
	display: flex;
	align-items: center;
	gap: 1rem;
}

.professor-card:hover {
	transform: translateY(-3px);
	box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
	border-color: #3b82f6;
}

.professor-card.selected {
	border-color: #3b82f6;
	box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
	background-color: #eff6ff; /* Light blue background for selected */
}

.professor-card-icon {
	flex-shrink: 0;
	font-size: 2.5rem; /* Larger icon */
	color: #3b82f6;
	background-color: #e0f2fe;
	border-radius: 50%;
	width: 3.5rem;
	height: 3.5rem;
	display: flex;
	align-items: center;
	justify-content: center;
}

.professor-info {
	flex-grow: 1;
}

.professor-info h4 {
	font-size: 1.25rem; /* Larger name */
	font-weight: 600;
	color: #1f2937;
	margin-bottom: 0.25rem;
}

.professor-info p {
	font-size: 0.9rem;
	color: #6b7280;
	line-height: 1.4;
}

/* Schedule Table */
.schedule-table {
	flex: 1; /* Schedule table takes remaining width */
	width: 100%;
	border-collapse: separate; /* Use separate to allow border-radius */
	border-spacing: 0; /* Remove space between cells */
	background-color: #ffffff;
	border-radius: 0.75rem;
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
	overflow: hidden; /* Ensures rounded corners apply to content */
}

.schedule-table thead {
	background-color: #eff6ff; /* Light blue header */
}

.schedule-table th {
	padding: 1rem 1.25rem;
	text-align: left;
	font-size: 0.9rem;
	font-weight: 600;
	color: #1e40af; /* Darker blue text */
	text-transform: uppercase;
	letter-spacing: 0.05em;
	border-bottom: 1px solid #dbeafe;
}

.schedule-table tbody tr {
	border-bottom: 1px solid #f3f4f6;
	transition: background-color 0.2s;
}

.schedule-table tbody tr:last-child {
	border-bottom: none;
}

.schedule-table tbody tr:hover {
	background-color: #f9fafb;
}

.schedule-table td {
	padding: 1rem 1.25rem;
	font-size: 0.95rem;
	color: #374151;
}

.schedule-table .time-slot.available {
	cursor: pointer;
	transition: background-color 0.2s, transform 0.2s;
}

.schedule-table .time-slot.available:hover {
	background-color: #e0f2fe;
}
</style>

