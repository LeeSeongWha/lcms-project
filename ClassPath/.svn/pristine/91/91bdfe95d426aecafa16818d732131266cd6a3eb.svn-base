<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<link rel="stylesheet" href="/dist/assets/css/bodyFormat.css">
<%@ taglib prefix="c" uri="jakarta.tags.core"%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
    
    
<%--  
	파일명 : scholarshipList.jsp  
	프로그램명 : 장학금 목록 전체 조회 화면  
	설명 : 전체 장학금 목록 조회 가능
	작성자 : 양 수 민  
	작성일 : 2025. 07. 11 
--%>

<title>Insert title here</title>


	<!-- ======================================== -->
	<div class="sectionHeaderLine">
		<!-- 왼쪽 제목 및 설명 -->
		<div>
			<div class="sectionHeaderTitle">장학금 목록</div>
			<div class="sectionHeaderDescription">전체 ${count}개의 장학금</div>
		</div>

		<!-- 오른쪽 등록 버튼 -->
		<button type="button" class="submitButton">+ 등록</button>
	</div>
		<!-- ======================================== -->
<form method="post" enctype="multipart/form-data" action="/staff/scholarship/scholarshipUpdate.do">
	<div class="tableContainer">
		<table class="defaultTable">
			<thead class="tableHead">
				<tr>
					<th class="tableTh">번호</th>
					<th class="tableTh">장학금명</th>
					<th class="tableTh">설명</th>
					<th class="tableTh">파일</th>
					<th class="tableTh">파일 등록</th>
				</tr>
			</thead>
			<tbody>
				<c:choose>
					<c:when test="${not empty scholarshipTypeList }">
						<c:forEach items="${scholarshipTypeList }" var="scholarshipTypeList" varStatus="status">
							<tr class="tableRowHover" onclick="moveToDetail(this)" data-user-no="${scholarshipTypeList.schTypeNo }">
								<td class="tableTd">${status.index+1 }</td>
								<td class="tableTd">${scholarshipTypeList.schName }</td>
								<td class="tableTd" style="text-align:left;">${scholarshipTypeList.schDesc }</td>
								<td class="tableTd" style="width:20%">
									<c:if test="${not empty scholarshipTypeList.schFileRefNo}">
										<a download href="/staff/scholarship/fileDownload.do?fileRefNo=${scholarshipTypeList.schFileRefNo}">
											<i class="fas fa-download"></i> 다운로드
										</a>
									</c:if>
									<c:if test="${empty scholarshipTypeList.schFileRefNo}" >
										<div class="editFile" style="display: none;">
											<input type="file" id="uploadFile" name="uploadFile" class="form-control">
										</div>	
										<div class="nowFile" style="display: inline-block;">
											등록된 파일이 없습니다.
										</div>
									</c:if>
								</td>
								<td class="tableTd" style="text-align:center;">
									<!-- 수정 버튼 -->
									<button type="button" class="editButton" onclick="enableEdit(this)">
										<i class="fa-solid fa-pen-to-square"></i>
									</button>
							
									<!-- 저장 버튼은 처음엔 숨겨져 있음 -->
									<button type="submit" class="submitButton" style="display: none;" onclick="return beforeSubmit(this)">
										<i class="fa-solid fa-floppy-disk"></i>
									</button>
									
									<!-- 취소 버튼 -->
									<button type="button" class="deleteButton" style="display: none;" onclick="cancelEdit(this)">
										<i class="fa-solid fa-xmark"></i>
									</button>
								</td>
							</tr>
						</c:forEach>
					</c:when>
	
					<c:otherwise>
						<tr>
							<td colspan="5" class="tableTd noticeInfo">아직 등록된 장학금 없음.</td>
						</tr>
					</c:otherwise>
				</c:choose>
			</tbody>
		</table>
	</div>
</form>

<script>
function enableEdit(button) {
	// 1. 모든 행의 수정 상태를 먼저 초기화
	resetAllEditModes();

	// 2. 현재 클릭된 행만 수정 모드로 변경
	const row = button.closest("tr");

	const fileInput = row.querySelector("input[type='file']");
	const submitButton = row.querySelector("button.submitButton");
	const cancelButton = row.querySelector("button.deleteButton");
	const editButton = row.querySelector("button.editButton");
	const editFile = row.querySelector(".editFile");
	const nowFile = row.querySelector(".nowFile");

	if (editFile) editFile.style.display = "inline-block";
	if (nowFile) nowFile.style.display = "none";
	if (fileInput) fileInput.style.display = "block";
	if (submitButton) submitButton.style.display = "inline-block";
	if (cancelButton) cancelButton.style.display = "inline-block";
	if (editButton) editButton.style.display = "none";
}

function cancelEdit(button) {
	const row = button.closest("tr");

	const fileInput = row.querySelector("input[type='file']");
	const submitButton = row.querySelector("button.submitButton");
	const cancelButton = row.querySelector("button.deleteButton");
	const editButton = row.querySelector("button.editButton");
	const editFile = row.querySelector(".editFile");
	const nowFile = row.querySelector(".nowFile");

	// 수정 모드 종료
	if (editFile) editFile.style.display = "none";
	if (nowFile) nowFile.style.display = "inline-block";
	if (fileInput) fileInput.style.display = "none";
	if (submitButton) submitButton.style.display = "none";
	if (cancelButton) cancelButton.style.display = "none";
	if (editButton) editButton.style.display = "inline-block";

	// 파일 input 값 초기화
	if (fileInput) fileInput.value = "";
}


function resetAllEditModes() {
	const rows = document.querySelectorAll("table.defaultTable tbody tr");

	rows.forEach(row => {
		const fileInput = row.querySelector("input[type='file']");
		const submitButton = row.querySelector("button.submitButton");
		const cancelButton = row.querySelector("button.deleteButton");
		const editButton = row.querySelector("button.editButton");
		const editFile = row.querySelector(".editFile");
		const nowFile = row.querySelector(".nowFile");

		if (editFile) editFile.style.display = "none";
		if (nowFile) nowFile.style.display = "inline-block";
		if (fileInput) fileInput.style.display = "none";
		if (submitButton) submitButton.style.display = "none";
		if (cancelButton) cancelButton.style.display = "none";
		if (editButton) editButton.style.display = "inline-block";

		if (fileInput) fileInput.value = "";
	});
}


function beforeSubmit(button) {
	const row = button.closest("tr");
	const fileInput = row.querySelector("input[type='file']");

	if (!fileInput || fileInput.files.length === 0) {
		alert("파일을 선택해 주세요.");
		return false; // form 전송 막기
	}
	return true; // form 전송 허용
}
</script>